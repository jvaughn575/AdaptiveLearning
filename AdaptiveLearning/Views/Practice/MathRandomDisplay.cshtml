 
@model MathQuizModel

@{
    ViewData["Title"] = "MathRandomDisplay";
}


<div class="row">
        
    <div class="col-md-12 text-center divination" id="math-quiz">
        $${}$$      
        <input type="text" name="answer" id="math-quiz-line-3" />
    </div>    
    
</div>

@section scripts{


<script type="text/javascript">
    $(function () {
        var mathQuizParams =
            {
                number1LowRange: @Model.Number1LowRange,
                number1HighRange: @Model.Number1HighRange,
                number2LowRange: @Model.Number2LowRange,
                number2HighRange: @Model.Number2HighRange,
                operations: [],
                numQuestions: @Model.NumQuestions,
            };
        @foreach (var op in Model.Operations)
        {
            @:mathQuizParams.operations.push("@op.ToString()");
        }

        var getRandom = function (min, max)
        {
            min = Math.ceil(min);
            max = Math.floor(max);
            return Math.floor(Math.random() * (max - min + 1)) + min;
        };

        var generateQuestion = function () {
            var num1 = getRandom(mathQuizParams.number1LowRange, mathQuizParams.number1HighRange);
            var num2 = getRandom(mathQuizParams.number2LowRange, mathQuizParams.number2HighRange);
            var operator = mathQuizParams.operations[getRandom(0, mathQuizParams.operations.length - 1)];

            //Debug
            //console.log("Generate Question:",operator, mathQuizParams, mathQuizParams.operations.length - 1);

            return { num1: num1, num2: num2, operator: operator };
         };

        var loadQuestion = function () {
            var question = generateQuestion();    
                        
            
            var mathExpression = "\\begin{array}{r}&" + question.num1 + "\\\\" + question.operator + "\\!\\!\\!\\!\\!\\!&" + question.num2 + "\\\\\\hline\\end{array}";
            mathExpression = mathExpression.replace("&#x2B;", "+");
                                                           

            MathJax.Hub.Queue(function () {
                var math = MathJax.Hub.getAllJax("math-quiz")[0];
                console.log("Mathjax", math);
                MathJax.Hub.Queue(["Text", math, mathExpression]); }
            );
            var math = document.getElementById("#math-quiz");
            
            return question;
        };

        // &#x2B; is html encoded '+' symbol
        var operatorFuncArr = {
            '&#x2B;': function(a, b) {
                return a + b;
            },
            'x': function(a, b) {
                return a * b;
            },
            '-': function (a, b) {
                return a - b;
            },
            '/': function (a, b) {
                return a / b;
             }
        };

        var question = loadQuestion();

        $("#math-quiz-line-3").keyup(function (event) {            
            
            console.log(question);
            var correct_answer = operatorFuncArr[question.operator](question.num1, question.num2);
            console.log("Answer is:", correct_answer);
            console.log(event.target.value);
            if (correct_answer == event.target.value) {
                console.log("You got it correct!");
                question = loadQuestion();
            }

        });

    });
</script>

 }       